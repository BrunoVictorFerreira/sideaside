{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sideaside\\\\src\\\\screens\\\\Login\\\\index.js\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\nimport { connect } from 'react-redux';\nvar state = {\n  usuario: null,\n  senha: null\n};\n\nvar Login = function Login(props) {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.containerForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"Usu\\xE1rio\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return state.usuario = text;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Senha\"), React.createElement(TextInput, {\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return login();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"purple\",\n      fontSize: 20,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Entrar\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"purple\",\n    paddingTop: Dimensions.get('window').height / 3,\n    flex: 1,\n    alignItems: \"center\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 40,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  containerForm: {\n    flex: 1,\n    width: \"90%\"\n  },\n  label: {\n    color: \"white\",\n    fontSize: 30,\n    textAlign: \"center\"\n  },\n  input: {\n    color: \"purple\",\n    fontSize: 25,\n    padding: 5,\n    backgroundColor: \"white\",\n    marginBottom: 10\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: \"white\",\n    padding: 20,\n    alignItems: \"center\"\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function (_login) {\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      login.toString = function () {\n        return _login.toString();\n      };\n\n      return login;\n    }(function (user) {\n      return dispatch(login(user));\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/xampp/htdocs/sideaside/src/screens/Login/index.js"],"names":["React","TextInput","TouchableOpacity","connect","state","usuario","senha","Login","props","styles","container","text","containerForm","label","input","button","login","color","fontSize","fontWeight","StyleSheet","create","backgroundColor","paddingTop","Dimensions","get","height","flex","alignItems","textAlign","marginBottom","width","padding","marginTop","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Text, View, StyleSheet, Dimensions } from 'react-native'\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler'\r\nimport { connect } from 'react-redux'\r\n\r\nlet state = {\r\n    usuario: null,\r\n    senha: null\r\n}\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.text}>Login</Text>\r\n            <View style={styles.containerForm}>\r\n                <Text style={styles.label}>Usu√°rio</Text>\r\n                <TextInput style={styles.input} onChangeText={text => state.usuario = text}></TextInput>\r\n                <Text style={styles.label}>Senha</Text>\r\n                <TextInput style={styles.input}></TextInput>\r\n                <TouchableOpacity style={styles.button} onPress={() => login()}>\r\n                    <Text style={{color: \"purple\", fontSize: 20, fontWeight: \"bold\"}}>Entrar</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"purple\",\r\n        paddingTop: Dimensions.get('window').height / 3,\r\n        flex: 1,\r\n        alignItems: \"center\"\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        fontSize: 40,\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        marginBottom: 20\r\n    },\r\n    containerForm: {\r\n        flex: 1,\r\n        width: \"90%\"\r\n        \r\n    },\r\n    label: {\r\n        color: \"white\",\r\n        fontSize: 30,\r\n        textAlign: \"center\"\r\n    },\r\n    input: {\r\n        color: \"purple\",\r\n        fontSize: 25,\r\n        padding: 5,\r\n        backgroundColor: \"white\",\r\n        marginBottom: 10\r\n\r\n    },\r\n    button: {\r\n        marginTop: 10,\r\n        backgroundColor: \"white\",\r\n        padding: 20,\r\n        alignItems: \"center\",\r\n        \r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: user => dispatch(login(user))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Login)\r\n\r\n"]},"metadata":{},"sourceType":"module"}