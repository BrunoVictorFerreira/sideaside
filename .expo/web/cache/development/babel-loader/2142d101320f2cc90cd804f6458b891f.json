{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sideaside\\\\src\\\\screens\\\\Login\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler';\nimport { connect } from 'react-redux';\nimport { login } from \"../../store/actions/user\";\n\nvar Login = function Login(props) {\n  state = {\n    usuario: null,\n    senha: null\n  };\n\n  var entrar = function entrar() {\n    if (state.usuario == \"Bruno\" && state.senha == \"123\") {\n      var _login = props.onLogin(_objectSpread({}, state));\n\n      gravarTotal();\n    } else {\n      Alert.alert('Erro', 'UsuÃ¡rio ou senha incorretos');\n    }\n  };\n\n  var gravarTotal = function gravarTotal() {\n    return _regeneratorRuntime.async(function gravarTotal$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@SIDEASIDE\", state.usuario));\n\n          case 3:\n            Keyboard.dismiss();\n            Alert.alert('Sucesso', 'Dado salvo com sucesso');\n            props.navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Home'\n              }]\n            });\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert('Erro', 'ERRROOOOOOO LOGIn');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.containerForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Usu\\xE1rio\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return state.usuario = text;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Senha\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(text) {\n      return state.senha = text;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: entrar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"purple\",\n      fontSize: 20,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Entrar\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"purple\",\n    paddingTop: Dimensions.get('window').height / 3,\n    flex: 1,\n    alignItems: \"center\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 40,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  containerForm: {\n    flex: 1,\n    width: \"90%\"\n  },\n  label: {\n    color: \"white\",\n    fontSize: 30,\n    textAlign: \"center\"\n  },\n  input: {\n    color: \"purple\",\n    fontSize: 25,\n    padding: 5,\n    backgroundColor: \"white\",\n    marginBottom: 10\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: \"white\",\n    padding: 20,\n    alignItems: \"center\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var user = _ref.user;\n  return {\n    usuario: user.usuario,\n    senha: user.senha,\n    isLogged: user.isLogged\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onLogin: function onLogin(user) {\n      return dispatch(login(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/xampp/htdocs/sideaside/src/screens/Login/index.js"],"names":["React","AsyncStorage","TextInput","TouchableOpacity","connect","login","Login","props","state","usuario","senha","entrar","onLogin","gravarTotal","Alert","alert","setItem","Keyboard","dismiss","navigation","reset","index","routes","name","styles","container","text","containerForm","label","input","button","color","fontSize","fontWeight","StyleSheet","create","backgroundColor","paddingTop","Dimensions","get","height","flex","alignItems","textAlign","marginBottom","width","padding","marginTop","mapStateToProps","user","isLogged","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;SACoDC,Y;;AACpD,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,8BAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrBC,EAAAA,KAAK,GAAG;AACJC,IAAAA,OAAO,EAAE,IADL;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAAR;;AAIA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,QAAIH,KAAK,CAACC,OAAN,IAAiB,OAAjB,IAA4BD,KAAK,CAACE,KAAN,IAAe,KAA/C,EAAsD;AAClD,UAAIL,MAAK,GAAGE,KAAK,CAACK,OAAN,mBAAmBJ,KAAnB,EAAZ;;AACAK,MAAAA,WAAW;AAEd,KAJD,MAIO;AACHC,MAAAA,KAAK,CAACC,KAAN,CAAY,MAAZ,EAAoB,6BAApB;AACH;AAEJ,GATD;;AAUA,MAAMF,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGNZ,YAAY,CAACe,OAAb,CAAqB,YAArB,EAAmCR,KAAK,CAACC,OAAzC,CAHM;;AAAA;AAKZQ,YAAAA,QAAQ,CAACC,OAAT;AAGAJ,YAAAA,KAAK,CAACC,KAAN,CAAY,SAAZ,EAAuB,wBAAvB;AAEAR,YAAAA,KAAK,CAACY,UAAN,CAAiBC,KAAjB,CAAuB;AACnBC,cAAAA,KAAK,EAAE,CADY;AAEnBC,cAAAA,MAAM,EAAE,CAAC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAD;AAFW,aAAvB;AAVY;AAAA;;AAAA;AAAA;AAAA;AAeZT,YAAAA,KAAK,CAACC,KAAN,CAAY,MAAZ,EAAoB,mBAApB;;AAfY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAmBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAAzB;AAAgC,IAAA,YAAY,EAAE,sBAAAH,IAAI;AAAA,aAAIlB,KAAK,CAACC,OAAN,GAAgBiB,IAApB;AAAA,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACI,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAAzB;AAAgC,IAAA,YAAY,EAAE,sBAAAH,IAAI;AAAA,aAAIlB,KAAK,CAACE,KAAN,GAAcgB,IAAlB;AAAA,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEF,MAAM,CAACM,MAAhC;AAAwC,IAAA,OAAO,EAAEnB,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEoB,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,QAAQ,EAAE,EAA7B;AAAiCC,MAAAA,UAAU,EAAE;AAA7C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CALJ,CAFJ,CADJ;AAcH,CAhDD;;AAkDA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AACPW,IAAAA,eAAe,EAAE,QADV;AAEPC,IAAAA,UAAU,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,CAFvC;AAGPC,IAAAA,IAAI,EAAE,CAHC;AAIPC,IAAAA,UAAU,EAAE;AAJL,GADkB;AAO7BhB,EAAAA,IAAI,EAAE;AACFiB,IAAAA,SAAS,EAAE,QADT;AAEFX,IAAAA,QAAQ,EAAE,EAFR;AAGFD,IAAAA,KAAK,EAAE,OAHL;AAIFE,IAAAA,UAAU,EAAE,MAJV;AAKFW,IAAAA,YAAY,EAAE;AALZ,GAPuB;AAc7BjB,EAAAA,aAAa,EAAE;AACXc,IAAAA,IAAI,EAAE,CADK;AAEXI,IAAAA,KAAK,EAAE;AAFI,GAdc;AAmB7BjB,EAAAA,KAAK,EAAE;AACHG,IAAAA,KAAK,EAAE,OADJ;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHW,IAAAA,SAAS,EAAE;AAHR,GAnBsB;AAwB7Bd,EAAAA,KAAK,EAAE;AACHE,IAAAA,KAAK,EAAE,QADJ;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHc,IAAAA,OAAO,EAAE,CAHN;AAIHV,IAAAA,eAAe,EAAE,OAJd;AAKHQ,IAAAA,YAAY,EAAE;AALX,GAxBsB;AAgC7Bd,EAAAA,MAAM,EAAE;AACJiB,IAAAA,SAAS,EAAE,EADP;AAEJX,IAAAA,eAAe,EAAE,OAFb;AAGJU,IAAAA,OAAO,EAAE,EAHL;AAIJJ,IAAAA,UAAU,EAAE;AAJR;AAhCqB,CAAlB,CAAf;;AAyCA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAClC,SAAO;AACHxC,IAAAA,OAAO,EAAEwC,IAAI,CAACxC,OADX;AAEHC,IAAAA,KAAK,EAAEuC,IAAI,CAACvC,KAFT;AAGHwC,IAAAA,QAAQ,EAAED,IAAI,CAACC;AAHZ,GAAP;AAKH,CAND;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHxC,IAAAA,OAAO,EAAE,iBAAAqC,IAAI;AAAA,aAAIG,QAAQ,CAAC/C,KAAK,CAAC4C,IAAD,CAAN,CAAZ;AAAA;AADV,GAAP;AAGH,CAJD;;AAQA,eAAe7C,OAAO,CAAC4C,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C7C,KAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport { Text, View, StyleSheet, Dimensions, Alert, AsyncStorage, Keyboard } from 'react-native'\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../store/actions/user'\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n    state = {\r\n        usuario: null,\r\n        senha: null\r\n    }\r\n    const entrar = () => {\r\n        if (state.usuario == \"Bruno\" && state.senha == \"123\") {\r\n            let login = props.onLogin({ ...state })\r\n            gravarTotal()\r\n\r\n        } else {\r\n            Alert.alert('Erro', 'UsuÃ¡rio ou senha incorretos')\r\n        }\r\n\r\n    }\r\n    const gravarTotal = async () => {\r\n        try {\r\n\r\n            await AsyncStorage.setItem(\"@SIDEASIDE\", state.usuario)\r\n\r\n            Keyboard.dismiss()\r\n\r\n\r\n            Alert.alert('Sucesso', 'Dado salvo com sucesso')\r\n\r\n            props.navigation.reset({\r\n                index: 0,\r\n                routes: [{ name: 'Home' }],\r\n            });\r\n        } catch (e) {\r\n            Alert.alert('Erro', 'ERRROOOOOOO LOGIn')\r\n\r\n        }\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.text}>Login</Text>\r\n            <View style={styles.containerForm}>\r\n                <Text style={styles.label}>UsuÃ¡rio</Text>\r\n                <TextInput style={styles.input} onChangeText={text => state.usuario = text}></TextInput>\r\n                <Text style={styles.label}>Senha</Text>\r\n                <TextInput style={styles.input} onChangeText={text => state.senha = text}></TextInput>\r\n                <TouchableOpacity style={styles.button} onPress={entrar}>\r\n                    <Text style={{ color: \"purple\", fontSize: 20, fontWeight: \"bold\" }}>Entrar</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"purple\",\r\n        paddingTop: Dimensions.get('window').height / 3,\r\n        flex: 1,\r\n        alignItems: \"center\"\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        fontSize: 40,\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        marginBottom: 20\r\n    },\r\n    containerForm: {\r\n        flex: 1,\r\n        width: \"90%\"\r\n\r\n    },\r\n    label: {\r\n        color: \"white\",\r\n        fontSize: 30,\r\n        textAlign: \"center\"\r\n    },\r\n    input: {\r\n        color: \"purple\",\r\n        fontSize: 25,\r\n        padding: 5,\r\n        backgroundColor: \"white\",\r\n        marginBottom: 10\r\n\r\n    },\r\n    button: {\r\n        marginTop: 10,\r\n        backgroundColor: \"white\",\r\n        padding: 20,\r\n        alignItems: \"center\",\r\n\r\n    }\r\n})\r\n\r\nconst mapStateToProps = ({ user }) => {\r\n    return {\r\n        usuario: user.usuario,\r\n        senha: user.senha,\r\n        isLogged: user.isLogged\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogin: user => dispatch(login(user))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n\r\n"]},"metadata":{},"sourceType":"module"}