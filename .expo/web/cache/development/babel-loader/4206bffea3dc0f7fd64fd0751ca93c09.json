{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sideaside\\\\src\\\\screens\\\\Loading\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { connect } from 'react-redux';\nimport { login } from \"../../store/actions/user\";\n\nvar Loading = function Loading(props) {\n  var fetchStorage = function fetchStorage() {\n    var logged, state;\n    return _regeneratorRuntime.async(function fetchStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            logged = false;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@SIDEASIDE\"));\n\n          case 4:\n            logged = _context.sent;\n\n            if (!logged) {\n              props.navigation.reset({\n                index: 0,\n                routes: [{\n                  name: 'Login'\n                }]\n              });\n            } else {\n              state = {\n                usuario: logged\n              };\n              props.onLogin(_objectSpread({}, state));\n              props.navigation.reset({\n                index: 0,\n                routes: [{\n                  name: 'Home'\n                }]\n              });\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            Alert.alert('Erro', 'ERRROOOOOOO LOADING');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  useEffect(function () {\n    fetchStorage();\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"purple\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onLogin: function onLogin(user) {\n      return dispatch(login(user));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Loading);","map":{"version":3,"sources":["C:/xampp/htdocs/sideaside/src/screens/Loading/index.js"],"names":["React","useEffect","AsyncStorage","connect","login","Loading","props","fetchStorage","logged","getItem","navigation","reset","index","routes","name","state","usuario","onLogin","Alert","alert","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","mapDispatchToProps","dispatch","user"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;SACqDC,Y;AACrD,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACvB,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,MADa,GACJ,KADI;AAAA;AAAA;AAAA,6CAGEN,YAAY,CAACO,OAAb,CAAqB,YAArB,CAHF;;AAAA;AAGbD,YAAAA,MAHa;;AAKb,gBAAI,CAACA,MAAL,EAAa;AACTF,cAAAA,KAAK,CAACI,UAAN,CAAiBC,KAAjB,CAAuB;AACnBC,gBAAAA,KAAK,EAAE,CADY;AAEnBC,gBAAAA,MAAM,EAAE,CAAC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAD;AAFW,eAAvB;AAIH,aALD,MAKO;AAECC,cAAAA,KAFD,GAES;AACRC,gBAAAA,OAAO,EAAER;AADD,eAFT;AAKHF,cAAAA,KAAK,CAACW,OAAN,mBAAmBF,KAAnB;AAEAT,cAAAA,KAAK,CAACI,UAAN,CAAiBC,KAAjB,CAAuB;AACnBC,gBAAAA,KAAK,EAAE,CADY;AAEnBC,gBAAAA,MAAM,EAAE,CAAC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAD;AAFW,eAAvB;AAIH;;AArBY;AAAA;;AAAA;AAAA;AAAA;AAuBbI,YAAAA,KAAK,CAACC,KAAN,CAAY,MAAZ,EAAoB,qBAApB;;AAvBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AA2BAlB,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,YAAY;AACf,GAFQ,CAAT;AAGA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CApCD;;AAuCA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,QAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf;;AASA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHZ,IAAAA,OAAO,EAAE,iBAAAa,IAAI;AAAA,aAAID,QAAQ,CAACzB,KAAK,CAAC0B,IAAD,CAAN,CAAZ;AAAA;AADV,GAAP;AAGH,CAJD;;AAMA,eAAe3B,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCvB,OAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { ActivityIndicator, StyleSheet, Alert, View, AsyncStorage } from 'react-native'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../store/actions/user'\r\n\r\nconst Loading = (props) => {\r\n    const fetchStorage = async () => {\r\n        let logged = false;\r\n        try {\r\n            logged = await AsyncStorage.getItem(\"@SIDEASIDE\")\r\n\r\n            if (!logged) {\r\n                props.navigation.reset({\r\n                    index: 0,\r\n                    routes: [{ name: 'Login' }],\r\n                });\r\n            } else {\r\n\r\n                let state = {\r\n                    usuario: logged\r\n                }\r\n                props.onLogin({ ...state })\r\n\r\n                props.navigation.reset({\r\n                    index: 0,\r\n                    routes: [{ name: 'Home' }],\r\n                });\r\n            }\r\n        } catch (e) {\r\n            Alert.alert('Erro', 'ERRROOOOOOO LOADING')\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchStorage()\r\n    });\r\n    return (\r\n        <View style={styles.container}>\r\n            <ActivityIndicator size=\"large\" color=\"white\" />\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"purple\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogin: user => dispatch(login(user))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Loading)"]},"metadata":{},"sourceType":"module"}