{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sideaside\\\\src\\\\components\\\\card.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Icon from '@expo/vector-icons/FontAwesome5';\nimport * as Animatable from 'react-native-animatable';\nexport default (function (props) {\n  var clicado = function clicado() {\n    props.navigation.navigate('Details', {\n      title: props.title\n    });\n  };\n\n  return React.createElement(TouchableOpacity, {\n    style: styles.card,\n    onPress: clicado,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(LinearGradient, {\n    colors: props.plan != \"perso\" && props.plan != \"comp\" ? ['purple', 'rgba(255,255,255,0.8)'] : ['#9a09bc', 'transparent'],\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      height: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), React.createElement(Animatable.View, {\n    animation: \"bounce\",\n    duration: 1000,\n    iterationCount: 1,\n    style: styles.float,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: props.plan == \"comp\" ? \"fire\" : props.plan == \"perso\" ? \"asterisk\" : props.plan == \"basi\" ? \"chart-line\" : \"network-wired\",\n    color: \"purple\",\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, props.title), React.createElement(Text, {\n    style: styles.apartir,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"A partir de\"), React.createElement(Text, {\n    style: styles.rs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"R$ \", React.createElement(Text, {\n    style: styles.value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 40\n    }\n  }, props.value)), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.detalhes,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Clique para detalhar\")));\n});\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: \"purple\",\n    width: \"45%\",\n    height: 200,\n    borderBottomEndRadius: 50,\n    alignItems: \"center\"\n  },\n  float: {\n    position: \"absolute\",\n    left: 0,\n    top: -25,\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 100\n  },\n  text: {\n    fontFamily: \"roboto-Light\",\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: 25,\n    marginTop: 15\n  },\n  apartir: {\n    color: \"white\",\n    textAlign: \"center\",\n    fontFamily: \"roboto\",\n    marginTop: 10\n  },\n  rs: {\n    fontFamily: \"roboto-Thin\",\n    fontSize: 55,\n    color: \"white\"\n  },\n  value: {\n    fontSize: 50\n  },\n  detalhes: {\n    color: \"purple\",\n    fontFamily: \"roboto-Bold\"\n  },\n  button: {\n    marginTop: 15,\n    backgroundColor: \"white\",\n    padding: 10,\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/xampp/htdocs/sideaside/src/components/card.js"],"names":["React","LinearGradient","Icon","Animatable","props","clicado","navigation","navigate","title","styles","card","plan","position","left","right","top","height","float","text","apartir","rs","value","button","detalhes","StyleSheet","create","backgroundColor","width","borderBottomEndRadius","alignItems","padding","borderRadius","fontFamily","color","textAlign","fontSize","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View, StyleSheet, Text, TouchableOpacity } from 'react-native'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport Icon from '@expo/vector-icons/FontAwesome5'\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\n\r\n\r\nexport default (props) => {\r\n    const clicado = () => {\r\n        props.navigation.navigate('Details', {\r\n            title : props.title\r\n        })\r\n    }\r\n    return (\r\n        <TouchableOpacity style={styles.card} onPress={clicado}>\r\n            <LinearGradient\r\n                // Background Linear Gradient\r\n                colors={props.plan != \"perso\" && props.plan != \"comp\" ? ['purple', 'rgba(255,255,255,0.8)'] : ['#9a09bc', 'transparent']}\r\n                style={{\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: 0,\r\n                    height: 200,\r\n                }}\r\n            />\r\n            <Animatable.View animation=\"bounce\" duration={1000} iterationCount={1} style={styles.float}>\r\n                <Icon name={props.plan == \"comp\" ? \"fire\" : props.plan == \"perso\" ? \"asterisk\" : props.plan == \"basi\" ? \"chart-line\" : \"network-wired\"} color=\"purple\" size={20} />\r\n            </Animatable.View>\r\n            <Text style={styles.text}>{props.title}</Text>\r\n            <Text style={styles.apartir}>A partir de</Text>\r\n            <Text style={styles.rs}>R$ <Text style={styles.value}>{props.value}</Text></Text>\r\n            <View style={styles.button}>\r\n                <Text style={styles.detalhes}>Clique para detalhar</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        backgroundColor: \"purple\",\r\n        width: \"45%\",\r\n        height: 200,\r\n        borderBottomEndRadius: 50,\r\n        alignItems: \"center\"\r\n    },\r\n    float: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: -25,\r\n        backgroundColor: \"white\",\r\n        padding: 10,\r\n        borderRadius: 100\r\n    },\r\n    text: {\r\n        fontFamily: \"roboto-Light\",\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        fontSize: 25,\r\n        marginTop: 15\r\n    },\r\n    apartir: {\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        fontFamily: \"roboto\",\r\n        marginTop: 10\r\n    },\r\n    rs: {\r\n        fontFamily: \"roboto-Thin\",\r\n        fontSize: 55,\r\n        color: \"white\"\r\n    },\r\n    value: {\r\n        fontSize: 50\r\n    },\r\n    detalhes: {\r\n        color: \"purple\",\r\n        fontFamily: \"roboto-Bold\"\r\n    },\r\n    button: {\r\n        marginTop: 15,\r\n        backgroundColor: \"white\",\r\n        padding: 10,\r\n        borderRadius: 10\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}